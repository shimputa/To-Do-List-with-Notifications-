// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  tasks    Task[]
}

model Task {
  id           Int           @id @default(autoincrement())
  title        String
  description  String?
  status       Status        @default(PENDING)
  priority     Priority      @default(MEDIUM)
  dueDate      DateTime?
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  recurringTask RecurringTask?
  notifications Notification[]
  subtasks     Subtask[]
}

model Subtask {
  id       Int      @id @default(autoincrement())
  title    String
  status   Status   @default(PENDING)
  task     Task     @relation(fields: [taskId], references: [id])
  taskId   Int
}

model RecurringTask {
  id        Int      @id @default(autoincrement())
  frequency Frequency
  nextDate  DateTime
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int      @unique
}

model Notification {
  id        Int      @id @default(autoincrement())
  message   String
  isRead    Boolean  @default(false)
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  createdAt DateTime @default(now())
}

enum Status {
  PENDING
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
}
